******************************
GUI version
******************************

A GUI version of the NIMS-OS has been created and released for easy execution.


Install
===========================


System requirements
-----------------------

* Windows 10 (64bit)

* Windows 11




Install procedures
-------------------------

* Before installing the GUI version, Python version of NIMS-OS is required according to :doc:`install<./install>` .





* Download the installer (nimsos-gui-main.zip) on GitHub from `GitHub <https://github.com/nimsos-dev/nimsos-gui>`_ .


* Unzip the zip file in an appropriate location, and you will find the following folder structure. Setup folder contains the setup program for Windows.


.. image:: ../img/gui_install_1.png
   :align: center
   :scale: 25%



|

* Launch setup.exe in the Setup folder to start the installer as shown below. Click "Next".


.. image:: ../img/gui_install_2.png
   :align: center
   :scale: 35%



|

* The screen for specifying the installation location is appeared. Here, specify the D:¥NIMSOS folder. If the D drive is not available, specify the C drive. If the C drive is used, change the D drive to the C drive in NIMSOS.ini file such as using Notepad.


.. image:: ../img/gui_install_3.png
   :align: center
   :scale: 35%



|

* On the following screen, click "Next" to start the installation.


.. image:: ../img/gui_install_4.png
   :align: center
   :scale: 35%



|


* When the installation is successfully completed, the screen changes to the following. Click "Close" to finish the installation.

.. image:: ../img/gui_install_5.png
   :align: center
   :scale: 35%



|


* After installation, confirm that the NIMS-OS is added to the Start menu of Windows.


.. image:: ../img/gui_install_6.png
   :align: center
   :scale: 35%



|

* In the installation foloder of NIMSOS, there is a SCRIPT folder, which contains the following Python scripts. These scripts are executed in the GUI.


.. image:: ../img/gui_install_7.png
   :align: center
   :scale: 55%



|


1. ``ai_tool.py`` : Python script for execution of AI

#. ``ai_tool_original.py`` :	Original Python script for execution of AI (If original is selected, this script is used.)

#. ``analysis_output.py`` : Python script for analysis of results by robotic experiments and update of candidates files

#. ``analysis_output_original.py`` : Original Python script for analysis of results by robotic experiments and update of candidates files (If original is selected, this script is used.)

#. ``preparation_input.py`` :	Python script for creation of input files for robotic experiments and execution of robotic experiments

#. ``preparation_input_original.py`` :	Original Python script for creation of input files for robotic experiments and execution of robotic experiments (If original is selected, this script is used.)




Uninstall
===========================


* To do uninstall, go to Windows Control Panel → Programs → Programs and Features and uninstall NIMS-OS as follows.


.. image:: ../img/gui_uninstall.png
   :align: center
   :scale: 35%



|


Usage
====================

The GUI version of the operation screen is shown in the figure below.

.. image:: ../img/gui_operation.png
   :align: center


|

In this GUI version, the name of the ``candidates_file`` is fixed to ``candidates.csv``, and the name of the ``proposals_file`` is fixed to ``proposals.csv``.
The execution procedure is as follows.


1. Enter the number of objectives, proposals, and cycles in the *Parameters* section.

#. Select the method to be used in the *AI algorithm* section. If we use a newly created module for AI method ``ai_tool_original.py``, click on Original.

#. Select the robotic system in the *Robotic system* section. If we use a newly created robotic system ``preparation_input_original.py`` and ``analysis_output_original.py``, click on Original.

#. Press the run button on the *Controller* section to start the automated materials exploration.


When the NIMS-OS is started, the *Cycle counter* operates.
Furthermore, in the *Time* section, the times required to execute the AI algorithm and one cycle are measured, respectively, and the remaining time is also outputted.
The standard output of the Python version is displayed in real time in the *Results* section, and these outputted results can be saved as a file by pressing the *Output* button.



* To pause the automated exploration, you can press the stop button of the *Controller* section. Note that pressing this button does not stop immediately, but when the ``candidates_file`` is updated, the NIMS-OS is stopped.

* To reset the settings, press the reset button on the *Controller*.
